//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using Dataspace.Common;
using Dataspace.Common.Attributes;




namespace Projections.Test.Data
{
    [DataContract(Namespace = "http://Isp.DataContracts", IsReference = false)]
    [KnownType(typeof(Attribute))]
    
    [Resource("Value")]
    [Serializable]
    public partial class Value
    {
         
    
        #region Primitive Properties
        [DataMember]
        public virtual System.Guid Id
        {
          
            get;
            set;
        }
        [DataMember]
        public virtual string Name
        {
          
            get;
            set;
        }
        [DataMember]
        public virtual System.Guid AttributeId
        {
            get { return _attributeId; }
            set
            {
                if (_attributeId != value)
                {
                    if (Attribute != null && Attribute.Id != value)
                    {
                        Attribute = null;
                    }
                    _attributeId = value;
                }
            }
        }
        private System.Guid _attributeId;

        #endregion

        #region Navigation Properties
    
    	[DataMember]	
        public virtual Attribute Attribute
        {
            get { return _attribute; }
            set
            {
                if (!ReferenceEquals(_attribute, value))
                {
                    var previousValue = _attribute;
                    _attribute = value;
                    FixupAttribute();
                }
            }
        }
        private Attribute _attribute;

        #endregion

        #region Association Fixup
    
        private void FixupAttribute()
        {
          
    
            if (Attribute != null)
            {
                
                if (AttributeId != Attribute.Id)
                {
                    AttributeId = Attribute.Id;
                }
            }
        }

        #endregion

    }
}
