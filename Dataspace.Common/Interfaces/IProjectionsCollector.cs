using System;
using System.Collections.Generic;
using System.IO;
using System.Xml.Schema;
using Server.Modules.HierarchiesModule;

namespace Dataspace.Common.Interfaces
{
    /// <summary>
    /// Сервис, позволяющий получать xml-представление для иерархии, определенной заранее заданной схемой.
    /// </summary>
    /// <remarks>
    /// Для преобразования ресурсной модели в иерархическую проекцию используются два механизма:
    /// 1. Описание отношений "родитель-дите" через xsd-схему. В схеме указаны допустимые родительские отношения, 
    /// каждый элемент, отображаемый схемой, отображает реально существующий в базе или виртуальный объект.
    /// Если объект является ресурсом, то соответственный ему элемент должен иметь обязательный атрибут Id, 
    /// который в xml-представлении содержит первичный ключ, и имя элемента, совпадающее с его идентификатором ресурса.
    /// Остальные атрибуты должны быть по имени идентичны именам
    /// соответствующих свойств соответствующего объекта (но, при этом, их состав не обязан полностью совпадать с состав полей этого объекта.
    /// Т.е., если мы хотим отразить ресурс ElementAttribute на ноду, то в этой ноде обязательно должен быть атрибут Id и, опционально, 
    /// Name (если хотим получать имя), TemplateId (если хотим получать идентификатор шаблона) и т.п.
    /// 
    /// 2. Мапперы объектов на схему. Для каждого нересурсного элемента в схеме должно быть описано:
    ///    получение свойств этого элемента по идентификатору, наследующемуся от первого ресурса в схеме
    ///    Для каждого возможного в схеме отношения "родитель-ребенок" должен быть определен запрос в соответствующем неймспейсе
    ///    использующий в качестве имени параметра имя родителя, значения параметра - идентификатор родителя и тип, соответствующий типу ресурса.
    ///    Основные запросы описаны в сервисе, допускается для своего неймспейса определять и переопределять собственные запросы.
    /// </remarks>   
    public interface IProjectionsCollector
    {        
        /// <summary>
        /// Gets the item tree.
        /// </summary>
        /// <param name="id">The id.</param>
        /// <param name="name">The name.</param>
        /// <param name="nmspace">The nmspace.</param>
        /// <param name="query">The query.</param>
        /// <returns></returns>      
        Stream GetProjection(Guid id, string name, string nmspace, HierarchyQuery query = null);

        /// <summary>
        /// Получает схемы данных и запрос.
        /// </summary>
        /// <returns></returns>
        XmlSchemaSet GetSchemas();

    }
}
